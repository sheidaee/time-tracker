$gutter-vertical      : 8rem;
$gutter-vertical-small: 6rem;
$gutter-horizontal    : 3rem;

// Media query manager

/*

0 - 600px:      phone
600 - 900px     Tablet: portrait
900 - 1200px    Tablet: landscape
[1200 - 1800]   is where our normal styles apply
1800px + :      Big desktop

$breakpoint argument choices:
- phone
- tab-port
- tab-land
- big-desktop

Order: 
Base + typhography > 
general layout + grid >
page layout >
components

1em = 16px
600 / 16 = 37.5em
*/
@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media (max-width: 37.5em) { @content };  /* 600px */
    }

    @if $breakpoint == tab-port {
        @media (max-width: 56.25em) { @content }; /* 900px */
    }

    @if $breakpoint == tab-land {
        @media (max-width: 75em) { @content }; /* 1200px */ 
    }

    @if $breakpoint == big-desktop {
        @media (min-width: 112.5em) { @content }; /* 1800px */
    }
}

[class*="col"] {     
    @include respond(tab-port) {
        width: 100% !important;
        margin-bottom: $gutter-vertical-small !important;
    }
}



.col1Of2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);

    /* &:nth-child(2n + 2) {
        margin-bottom: $gutter-horizontal;
    } */
    &:not(:nth-child(2n + 2)) {
        margin-right: $gutter-horizontal;
        @include respond(tab-port) {
            margin-right: 0;
        }
    } 
}

.col1Of3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);

    &:nth-child(3n + 3) {
        margin-bottom: $gutter-horizontal;
    }
    &:not(:nth-child(3n + 3)) {
        margin-right: $gutter-horizontal;
        @include respond(tab-port) {
            margin-right: 0;
        }
    } 
}

.col2Of3 {
    width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
}

.col1Of4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
}

.col2Of4 {
    width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
}

.col3Of4 {
    width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + (2 * #{$gutter-horizontal}));
}